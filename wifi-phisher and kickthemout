************KickThemOut****************

Installation

You can download KickThemOut by cloning the Git Repo and simply installing its requirements:

~ ❯❯❯ sudo apt-get update && sudo apt-get install nmap

~ ❯❯❯ git clone https://github.com/k4m4/kickthemout.git

~ ❯❯❯ cd kickthemout/

~/kickthemout ❯❯❯ sudo -H pip3 install -r requirements.txt

~/kickthemout ❯❯❯ sudo python3 kickthemout.py
Usage: sudo python3 kickthemout.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -p PACKETS, --packets=PACKETS
                        number of packets broadcasted per minute (default: 6)
  -s, --scan            perform a quick network scan and exit
  -t TARGETS, --target=TARGETS
                        specify target IP address(es) and perform attack

Examples:
  sudo python3 kickthemout.py --target 192.168.1.10 
  sudo python3 kickthemout.py -t 192.168.1.5,192.168.1.10 -p 30
  sudo python3 kickthemout.py (interactive mode

*******************************************************************************************************************************************************************************
Wifiphisher

The Rogue Access Point Framework

 about

Wifiphisher is a rogue Access Point framework for conducting red team engagements or Wi-Fi 
security testing. Using Wifiphisher, penetration testers can easily 
achieve a man-in-the-middle position against wireless clients by performing 
targeted Wi-Fi association attacks. Wifiphisher can be further used to mount
 victim-customized web phishing attacks against the connected clients in order to capture 
credentials (e.g. from third party login pages or WPA/WPA2 Pre-Shared Keys) 
or infect the victim stations with malwares.

Wi-Fi phishing consists of two steps:

The first step involves the process of associating with Wi-Fi clients unknowingly, or in other words, obtaining a man-in-the-middle (MITM) position. Wifiphisher uses a number of different techniques to achieve this including:

Evil Twin, where Wifiphisher creates a fake wireless network that looks similar to a legitimate network.
KARMA, where Wifiphisher masquerades as a public network searched for by nearby Wi-Fi clients.
Known Beacons, where Wifiphisher broadcasts a dictionary of common ESSIDs, that the around wireless stations have likely connected to in the past.
At the same time, Wifiphisher keeps forging “Deauthenticate” or “Disassociate” packets to disrupt existing associations and eventually lure victims using the above techniques.


Installation
To install the latest development version type the following commands:

git clone https://github.com/wifiphisher/wifiphisher.git # Download the latest revision
cd wifiphisher # Switch to tool's directory
sudo python setup.py install # Install any dependencies

Usage
Run the tool by typing wifiphisher or python bin/wifiphisher (from inside the tool's directory).

By running the tool without any options, it will find the right interfaces and interactively ask the user to pick the ESSID of the target network (out of a list with all the ESSIDs in the around area) as well as a phishing scenario to perform. By default, the tool will perform both Evil Twin and KARMA attacks.

wifiphisher -aI wlan0 -jI wlan4 -p firmware-upgrade --handshake-capture handshake.pcap

wifiphisher --essid CONFERENCE_WIFI -p plugin_update -pK s3cr3tp4ssw0rd

wifiphisher --essid "FREE WI-FI" -p oauth-login -kB

